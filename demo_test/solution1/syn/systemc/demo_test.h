// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _demo_test_HH_
#define _demo_test_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "demo_test_fadd_32bkb.h"
#include "demo_test_mux_42_cud.h"

namespace ap_rtl {

struct demo_test : public sc_module {
    // Port declarations 22
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<32> > idataInCtrl_0;
    sc_in< sc_lv<32> > idataInCtrl_1;
    sc_in< sc_lv<32> > idataInCtrl_2;
    sc_in< sc_lv<32> > idataInCtrl_3;
    sc_in< sc_lv<32> > fdataInCtrl_0;
    sc_in< sc_lv<32> > fdataInCtrl_1;
    sc_in< sc_lv<32> > fdataInCtrl_2;
    sc_in< sc_lv<32> > fdataInCtrl_3;
    sc_out< sc_lv<32> > idataOutCtrl_0;
    sc_out< sc_lv<32> > idataOutCtrl_1;
    sc_out< sc_lv<32> > idataOutCtrl_2;
    sc_out< sc_lv<32> > idataOutCtrl_3;
    sc_out< sc_lv<32> > fdataOutCtrl_0;
    sc_out< sc_lv<32> > fdataOutCtrl_1;
    sc_out< sc_lv<32> > fdataOutCtrl_2;
    sc_out< sc_lv<32> > fdataOutCtrl_3;
    sc_signal< sc_logic > ap_var_for_const1;
    sc_signal< sc_lv<32> > ap_var_for_const0;


    // Module declarations
    demo_test(sc_module_name name);
    SC_HAS_PROCESS(demo_test);

    ~demo_test();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    demo_test_fadd_32bkb<1,4,32,32,32>* demo_test_fadd_32bkb_U1;
    demo_test_mux_42_cud<1,1,32,32,32,32,2,32>* demo_test_mux_42_cud_U2;
    demo_test_mux_42_cud<1,1,32,32,32,32,2,32>* demo_test_mux_42_cud_U3;
    sc_signal< sc_lv<6> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<3> > i_1_fu_212_p2;
    sc_signal< sc_lv<3> > i_1_reg_262;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<2> > tmp_4_fu_218_p1;
    sc_signal< sc_lv<2> > tmp_4_reg_267;
    sc_signal< sc_lv<1> > exitcond_fu_206_p2;
    sc_signal< sc_lv<32> > tmp_3_fu_222_p6;
    sc_signal< sc_lv<32> > tmp_3_reg_272;
    sc_signal< sc_lv<3> > i_reg_186;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<32> > tmp_1_fu_249_p2;
    sc_signal< sc_lv<32> > idataOutCtrl_2_preg;
    sc_signal< sc_lv<32> > grp_fu_197_p2;
    sc_signal< sc_lv<32> > fdataOutCtrl_2_preg;
    sc_signal< sc_lv<32> > idataOutCtrl_1_preg;
    sc_signal< sc_lv<32> > fdataOutCtrl_1_preg;
    sc_signal< sc_lv<32> > idataOutCtrl_0_preg;
    sc_signal< sc_lv<32> > fdataOutCtrl_0_preg;
    sc_signal< sc_lv<32> > idataOutCtrl_3_preg;
    sc_signal< sc_lv<32> > fdataOutCtrl_3_preg;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<2> > tmp_3_fu_222_p5;
    sc_signal< sc_lv<32> > tmp_fu_236_p6;
    sc_signal< sc_lv<6> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<6> ap_ST_fsm_state1;
    static const sc_lv<6> ap_ST_fsm_state2;
    static const sc_lv<6> ap_ST_fsm_state3;
    static const sc_lv<6> ap_ST_fsm_state4;
    static const sc_lv<6> ap_ST_fsm_state5;
    static const sc_lv<6> ap_ST_fsm_state6;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<32> ap_const_lv32_40200000;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<3> ap_const_lv3_4;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<1> ap_const_lv1_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const1();
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state6();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_exitcond_fu_206_p2();
    void thread_fdataOutCtrl_0();
    void thread_fdataOutCtrl_1();
    void thread_fdataOutCtrl_2();
    void thread_fdataOutCtrl_3();
    void thread_i_1_fu_212_p2();
    void thread_idataOutCtrl_0();
    void thread_idataOutCtrl_1();
    void thread_idataOutCtrl_2();
    void thread_idataOutCtrl_3();
    void thread_tmp_1_fu_249_p2();
    void thread_tmp_3_fu_222_p5();
    void thread_tmp_4_fu_218_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
